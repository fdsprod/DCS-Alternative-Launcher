<Application x:Class="DCS.Alternative.Launcher.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:advanced="clr-namespace:DCS.Alternative.Launcher.Plugins.Settings.Views.Advanced"
             xmlns:controls="clr-namespace:DCS.Alternative.Launcher.Controls"
             xmlns:dcs="clr-namespace:DCS.Alternative.Launcher.Plugins.Settings.Views.Dcs"
             xmlns:firstUse="clr-namespace:DCS.Alternative.Launcher.Wizards.Steps.FirstUse"
             xmlns:general="clr-namespace:DCS.Alternative.Launcher.Plugins.Settings.Views.General"
             xmlns:general1="clr-namespace:DCS.Alternative.Launcher.Views.Settings.Views.General"
             xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles/LoadingWave.xaml" />
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles/LoadingThreeDots.xaml" />
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles/LoadingFlipPlane.xaml" />
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles/LoadingPulse.xaml" />
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles/LoadingDoubleBounce.xaml" />
                <!--  FluentWPF Controls  -->
                <ResourceDictionary Source="pack://application:,,,/FluentWPF;component/Styles/Controls.xaml" />

                <!--  LoadingIndicators Controls  -->
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/LoadingIndicators.WPF;component/Styles.xaml" />

                <ResourceDictionary Source="/Themes/ComboBox.xaml" />
                <ResourceDictionary Source="/Themes/TextBox.xaml" />

            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="HasDropShadow" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToolTip">
                            <Border Name="Border"
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    Background="#2F2F2F"
                                    BorderThickness="1">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                </Border.BorderBrush>
                                <ContentPresenter Margin="4"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Top" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" Value="true">
                                    <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                                    <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="BorderAccentBrush" Color="#FF5F5F5F" />
            <Color x:Key="MaterialDesignShadow">#AA000000</Color>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="#FFFFFFFF" />
            </Style>
            <DropShadowEffect x:Key="MaterialDesignShadowDepth3"
                              BlurRadius="14"
                              Direction="270"
                              Opacity=".42"
                              RenderingBias="Performance"
                              ShadowDepth="4.5"
                              Color="{StaticResource MaterialDesignShadow}" />
            <FontFamily x:Key="Orbitron">pack://application:,,,/Resources/Fonts/#orbitron</FontFamily>
            <FontFamily x:Key="Prototype">pack://application:,,,/Resources/Fonts/#prototype</FontFamily>
            <Color x:Key="OffColor">#FFFF3434</Color>
            <Color x:Key="OnColor">#FF11AF11</Color>
            <SolidColorBrush x:Key="OffBrush" Color="{StaticResource OffColor}" />

            <Style x:Key="ToggleSwitchStyle" TargetType="ToggleButton">
                <Setter Property="MinHeight" Value="20" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="BorderBrush" Value="#FFFFFFFF" />
                <Setter Property="MaxHeight" Value="20" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="Border"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="10">
                                    <Grid>
                                        <Border x:Name="PART_Background"
                                                Background="{StaticResource OffBrush}"
                                                CornerRadius="10" />
                                        <Border x:Name="PART_BackgroundOverlay"
                                                Background="#FFFFFFFF"
                                                CornerRadius="10"
                                                Opacity="0" />
                                    </Grid>
                                </Border>
                                <Ellipse x:Name="PART_ThumbIndicator"
                                         Grid.Column="0"
                                         Width="14"
                                         Height="14"
                                         Margin="3,0,0,0"
                                         HorizontalAlignment="Left"
                                         VerticalAlignment="Center"
                                         Fill="{TemplateBinding BorderBrush}"
                                         Stretch="Uniform">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform x:Name="PART_ThumbTranslate" />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                                <ContentPresenter Grid.Column="1"
                                                  Margin="4,0,0,0"
                                                  VerticalAlignment="Center" />
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0.2" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0.4" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="PART_Background"
                                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                                To="{StaticResource OnColor}"
                                                                Duration="0:0:0.20" />
                                                <DoubleAnimation Storyboard.TargetName="PART_ThumbTranslate"
                                                                 Storyboard.TargetProperty="X"
                                                                 To="20"
                                                                 Duration="0:0:0.1" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="PART_Background"
                                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                                To="{StaticResource OffColor}"
                                                                Duration="0:0:0.20" />
                                                <DoubleAnimation Storyboard.TargetName="PART_ThumbTranslate"
                                                                 Storyboard.TargetProperty="X"
                                                                 To="0"
                                                                 Duration="0:0:0.1" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Indeterminate" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="HyperlinkButton" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="#FFFFFFFF" />
                <Setter Property="Cursor" Value="Hand" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <ControlTemplate.Resources>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="TextDecorations" Value="Underline" />
                                        </Style>
                                    </ControlTemplate.Resources>
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MaterialScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                        Grid.Row="0"
                                                        Grid.Column="0"
                                                        Margin="{TemplateBinding Padding}"
                                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                                        CanHorizontallyScroll="False"
                                                        CanVerticallyScroll="False"
                                                        Content="{TemplateBinding Content}"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}" />
                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                           Grid.Row="0"
                                           Grid.Column="1"
                                           Margin="0,5,5,5"
                                           HorizontalAlignment="Right"
                                           AutomationProperties.AutomationId="VerticalScrollBar"
                                           Cursor="Arrow"
                                           Maximum="{TemplateBinding ScrollableHeight}"
                                           Minimum="0"
                                           Style="{DynamicResource MaterialScrollBarStyle}"
                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                           Grid.Row="1"
                                           Grid.Column="0"
                                           Margin="5,0"
                                           VerticalAlignment="Bottom"
                                           AutomationProperties.AutomationId="HorizontalScrollBar"
                                           Cursor="Arrow"
                                           Maximum="{TemplateBinding ScrollableWidth}"
                                           Minimum="0"
                                           Orientation="Horizontal"
                                           Style="{DynamicResource MaterialScrollBarStyle}"
                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />

                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4" />

            <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <themes:ScrollChrome x:Name="Chrome"
                                                 themes:ScrollChrome.ScrollGlyph="{TemplateBinding themes:ScrollChrome.ScrollGlyph}"
                                                 RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                 RenderPressed="{TemplateBinding IsPressed}"
                                                 SnapsToDevicePixels="true" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Width="{TemplateBinding Width}"
                                       Height="{TemplateBinding Height}"
                                       Fill="{TemplateBinding Background}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Background" Value="#FFB0BEC5" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Margin="2" Background="{TemplateBinding Background}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Width="{TemplateBinding Width}"
                                       Height="{TemplateBinding Height}"
                                       Fill="{TemplateBinding Background}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MaterialScrollBarStyle" TargetType="{x:Type ScrollBar}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Width" Value="10" />
                <Setter Property="MinWidth" Value="10" />
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg"
                                  Background="{TemplateBinding Background}"
                                  SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track"
                                       Grid.Row="1"
                                       IsDirectionReversed="true"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb themes:ScrollChrome.ScrollGlyph="VerticalGripper" Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Bg" Property="Background" Value="{StaticResource ScrollBarDisabledBackground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto" />
                        <Setter Property="MinWidth" Value="0" />
                        <Setter Property="Height" Value="10" />
                        <Setter Property="MinHeight" Value="10" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg"
                                          Background="{TemplateBinding Background}"
                                          SnapsToDevicePixels="true">
                                        <Track x:Name="PART_Track"
                                               Grid.Column="1"
                                               IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb themes:ScrollChrome.ScrollGlyph="HorizontalGripper" Style="{StaticResource ScrollBarThumb}" />
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="Bg" Property="Background" Value="{StaticResource ScrollBarDisabledBackground}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style BasedOn="{StaticResource MaterialScrollViewerStyle}" TargetType="{x:Type ScrollViewer}" />


            <DataTemplate DataType="{x:Type general:InstallationSettingsViewModel}">
                <controls:InstallationControl Margin="30" />
            </DataTemplate>

            <DataTemplate DataType="{x:Type general1:ProfileSettingsViewModel}">
                <controls:ProfilesControl Margin="30" />
            </DataTemplate>
            <DataTemplate DataType="{x:Type advanced:GraphicsSettingsViewModel}">
                <advanced:GraphicsSettingsView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type advanced:CameraSettingsViewModel}">
                <advanced:CameraSettingsView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type advanced:CameraMirrorsSettingsViewModel}">
                <advanced:CameraMirrorsSettingsView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type advanced:TerrainSettingsViewModel}">
                <advanced:TerrainSettingsView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type advanced:TerrainMirrorSettingsViewModel}">
                <advanced:TerrainMirrorSettingsView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type advanced:TerrainReflectionSettingsViewModel}">
                <advanced:TerrainReflectionSettingsView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type advanced:SoundSettingsViewModel}">
                <advanced:SoundSettingsView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type advanced:DcsOptionCategoryViewModel}">
                <dcs:DcsOptionCategoryView />
            </DataTemplate>

            <!--  First Use Wizard Steps  -->
            <DataTemplate DataType="{x:Type firstUse:FirstUseWelcomeStepViewModel}">
                <firstUse:FirstUseWelcomeStepView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type firstUse:CreateProfileWizardStepViewModel}">
                <firstUse:CreateProfileWizardStepView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type firstUse:InstallationsWizardStepViewModel}">
                <firstUse:InstallationsWizardStepView />
            </DataTemplate>

        </ResourceDictionary>
    </Application.Resources>
</Application>